use std::io;

fn add(a: &f64, b: &f64) -> f64 {
    a + b
}

fn subtract(a: &f64, b: &f64) -> f64 {
    a - b
}

fn multiply(a: &f64, b: &f64) -> f64 {
    a * b
}

fn divide(a: &f64, b: &f64) -> Result<f64, &'static str> {
    if *b != 0.0 {
        Ok(a / b)
    } else {
        Err("Cannot divide by zero")
    }
}

fn main() {
    println!("Simple Rust Calculator");
    
    println!("Enter first number:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let num1: f64 = input.trim().parse().expect("Invalid input");
    
    println!("Enter second number:");
    input.clear();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let num2: f64 = input.trim().parse().expect("Invalid input");
    
    println!("Select operation:");
    println!("1. Add");
    println!("2. Subtract");
    println!("3. Multiply");
    println!("4. Divide");
    
    input.clear();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let choice: u32 = input.trim().parse().expect("Invalid input");
    
    match choice {
        1 => println!("Result: {}", add(&num1, &num2)),
        2 => println!("Result: {}", subtract(&num1, &num2)),
        3 => println!("Result: {}", multiply(&num1, &num2)),
        4 => match divide(&num1, &num2) {
            Ok(result) => println!("Result: {}", result),
            Err(e) => println!("Error: {}", e),
        },
        _ => println!("Invalid choice"),
    }
}
